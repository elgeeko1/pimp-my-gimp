---
- name: initialize fact boot_config_changed
  ansible.builtin.set_fact:
    boot_config_changed: false

- name: raspberry pi enable audio
  lineinfile: 
    path: /boot/firmware/config.txt
    regexp: '^(.*)dtparam=audio=(.*)$' 
    line: 'dtparam=audio=on'
    backrefs: yes
  become: true
  register: config

- name: set fact boot_config_changed
  ansible.builtin.set_fact:
    boot_config_changed: true
  when: config.changed

- name: raspberry pi enable i2c
  lineinfile: 
    path: /boot/firmware/config.txt
    regexp: '^(.*)dtparam=i2c_arm=(.*)$' 
    line: 'dtparam=i2c_arm=on'
    backrefs: yes
  become: true
  register: config

- name: set fact boot_config_changed
  ansible.builtin.set_fact:
    boot_config_changed: true
  when: config.changed

- name: raspberry pi enable spi
  lineinfile: 
    path: /boot/firmware/config.txt
    regexp: '^(.*)dtparam=spi=(.*)$' 
    line: 'dtparam=spi=on'
    backrefs: yes
  become: true
  register: config

- name: set fact boot_config_changed
  ansible.builtin.set_fact:
    boot_config_changed: true
  when: config.changed

- name: raspberry pi enable uart
  lineinfile: 
    path: /boot/firmware/config.txt
    regexp: '^(.*)enable_uart=$' 
    line: 'enable_uart=1'
    backrefs: yes
  become: true
  register: config

- name: set fact boot_config_changed
  ansible.builtin.set_fact:
    boot_config_changed: true
  when: config.changed

- name: reboot on boot configuration change
  ansible.builtin.reboot:
  become: true
  when: boot_config_changed